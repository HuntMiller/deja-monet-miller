{"version":3,"sources":["components/reason-consumer.js","components/reason-provider.js","App.js","reportWebVitals.js","index.js"],"names":["_reasonConsumer","render","typingComplete","ReasonConsumer","displayContinue","display","setState","onContinue","e","props","index","progress","state","targetIndex","canContinueForward","reasons","length","prevProps","this","proceedButton","focus","noJsonFile","emptyJsonFile","reason","header","onSubmit","startDelay","avgTypingDelay","cursor","show","onTypingDone","Delay","ms","body","autoFocus","ref","x","type","style","opacity","onClick","icon","faHeart","faUndo","Component","ReasonProvider","childrenWithProps","React","Children","map","children","child","isValidElement","cloneElement","list","App","i","className","onCl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b01e5054.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faUndo } from '@fortawesome/free-solid-svg-icons'\r\nimport Typist from 'react-typist';\r\n\r\nconst _reasonConsumer = {\r\n    id: {\r\n        render: 'render',\r\n        typingComplete: 'typingComplete'\r\n    }\r\n}\r\nclass ReasonConsumer extends Component {\r\n    constructor(){\r\n        super();\r\n        const {render, typingComplete} = _reasonConsumer.id;\r\n        this.state = {\r\n            [render]: true,\r\n            [typingComplete]: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        const {index} = this.props;\r\n        const {render} = _reasonConsumer.id;\r\n\r\n        if(index !== prevProps.index){\r\n            this.setState({\r\n                [render]: false\r\n            }, () => this.setState({ \r\n                [render]: true\r\n            }, () => this.proceedButton.focus())\r\n            );\r\n        }\r\n    }\r\n\r\n    displayContinue = display => {\r\n        const {typingComplete} = _reasonConsumer.id;\r\n        this.setState({\r\n            [typingComplete]: display\r\n        });\r\n    }\r\n\r\n    onContinue = e => {\r\n        const {index, progress} = this.props;\r\n        const {typingComplete} = _reasonConsumer.id;\r\n        if(this.state[typingComplete]){\r\n            const targetIndex = this.canContinueForward() ? index + 1 : 0;\r\n            this.setState({\r\n                [typingComplete]: false\r\n            }, e => progress(e, targetIndex));\r\n        }\r\n    }\r\n\r\n    canContinueForward = () => {\r\n        const {index, reasons} = this.props;\r\n        return (index < reasons.length - 1);\r\n    }\r\n    \r\n    render(){\r\n        const {reasons, index} = this.props;\r\n        const {render, typingComplete} = _reasonConsumer.id;\r\n        const noJsonFile = !reasons;\r\n        const emptyJsonFile = reasons.length === 0;\r\n        const reason = (noJsonFile || emptyJsonFile) ? \r\n        {\r\n            header: 'Failed to load'\r\n        } : reasons[index];\r\n\r\n        if(!this.state[render])\r\n            return null;\r\n            \r\n        return (\r\n        <form onSubmit={this.onContinue}>\r\n            <Typist\r\n            startDelay={1500}\r\n            avgTypingDelay={100}\r\n            cursor={{\r\n                show: false,\r\n            }}\r\n            onTypingDone={() => this.displayContinue(true)}>\r\n                <h1>{reason.header}</h1>\r\n                <Typist.Delay ms={1500}/>\r\n                <p>{reason.body}</p>\r\n            </Typist>\r\n                <button\r\n                autoFocus=\"true\"\r\n                ref={x => {this.proceedButton = x}}\r\n                type=\"submit\"\r\n                style={{opacity: this.state[typingComplete] ? '1':'0'}} \r\n                onClick={this.onContinue}>\r\n                    <FontAwesomeIcon icon={this.canContinueForward() ? faHeart : faUndo} />\r\n                    </button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReasonConsumer;","import React from 'react';\r\nimport reasons from '../reasons.json';\r\n\r\nfunction ReasonProvider(props) {\r\n  const childrenWithProps = React.Children.map(props.children, child => {\r\n    if (React.isValidElement(child)) {\r\n      return React.cloneElement(child, { reasons: reasons?.list ?? [] });\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return <div>{childrenWithProps}</div>;\r\n}\r\n\r\nexport default ReasonProvider;","import './App.css';\nimport React, { Component } from 'react';\nimport ReasonConsumer from './components/reason-consumer';\nimport ReasonProvider from './components/reason-provider';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      index: 0\n    };\n  }\n\n  progress = (e, i) => {\n    this.setState({\n      index: i\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\" onCl>\n        <ReasonProvider>\n          <ReasonConsumer \n          index={this.state.index}\n          progress={this.progress}\n          />\n        </ReasonProvider>\n    </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}